#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BVSoftware.Billing.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CommerceHosted")]
	public partial class DbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbvb_Subscription(bvb_Subscription instance);
    partial void Updatebvb_Subscription(bvb_Subscription instance);
    partial void Deletebvb_Subscription(bvb_Subscription instance);
    partial void Insertbvb_BillingAccount(bvb_BillingAccount instance);
    partial void Updatebvb_BillingAccount(bvb_BillingAccount instance);
    partial void Deletebvb_BillingAccount(bvb_BillingAccount instance);
    #endregion
		
		public DbDataContext() : 
				base(global::BVSoftware.Billing.Properties.Settings.Default.CommerceHostedConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bvb_Subscription> bvb_Subscriptions
		{
			get
			{
				return this.GetTable<bvb_Subscription>();
			}
		}
		
		public System.Data.Linq.Table<bvb_BillingAccount> bvb_BillingAccounts
		{
			get
			{
				return this.GetTable<bvb_BillingAccount>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bvb_Subscriptions")]
	public partial class bvb_Subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private bool _IsCancelled;
		
		private System.Nullable<System.DateTime> _CancelDateUtc;
		
		private decimal _Amount;
		
		private System.DateTime _StartDateUtc;
		
		private int _Period;
		
		private int _BillFor;
		
		private string _Description;
		
		private string _Sku;
		
		private long _AccountId;
		
		private EntityRef<bvb_BillingAccount> _bvb_BillingAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnCancelDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateUtcChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnStartDateUtcChanging(System.DateTime value);
    partial void OnStartDateUtcChanged();
    partial void OnPeriodChanging(int value);
    partial void OnPeriodChanged();
    partial void OnBillForChanging(int value);
    partial void OnBillForChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSkuChanging(string value);
    partial void OnSkuChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    #endregion
		
		public bvb_Subscription()
		{
			this._bvb_BillingAccount = default(EntityRef<bvb_BillingAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelDateUtc
		{
			get
			{
				return this._CancelDateUtc;
			}
			set
			{
				if ((this._CancelDateUtc != value))
				{
					this.OnCancelDateUtcChanging(value);
					this.SendPropertyChanging();
					this._CancelDateUtc = value;
					this.SendPropertyChanged("CancelDateUtc");
					this.OnCancelDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,10) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateUtc", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateUtc
		{
			get
			{
				return this._StartDateUtc;
			}
			set
			{
				if ((this._StartDateUtc != value))
				{
					this.OnStartDateUtcChanging(value);
					this.SendPropertyChanging();
					this._StartDateUtc = value;
					this.SendPropertyChanged("StartDateUtc");
					this.OnStartDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Int NOT NULL")]
		public int Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillFor", DbType="Int NOT NULL")]
		public int BillFor
		{
			get
			{
				return this._BillFor;
			}
			set
			{
				if ((this._BillFor != value))
				{
					this.OnBillForChanging(value);
					this.SendPropertyChanging();
					this._BillFor = value;
					this.SendPropertyChanged("BillFor");
					this.OnBillForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sku", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Sku
		{
			get
			{
				return this._Sku;
			}
			set
			{
				if ((this._Sku != value))
				{
					this.OnSkuChanging(value);
					this.SendPropertyChanging();
					this._Sku = value;
					this.SendPropertyChanged("Sku");
					this.OnSkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._bvb_BillingAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bvb_BillingAccount_bvb_Subscription", Storage="_bvb_BillingAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public bvb_BillingAccount bvb_BillingAccount
		{
			get
			{
				return this._bvb_BillingAccount.Entity;
			}
			set
			{
				bvb_BillingAccount previousValue = this._bvb_BillingAccount.Entity;
				if (((previousValue != value) 
							|| (this._bvb_BillingAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bvb_BillingAccount.Entity = null;
						previousValue.bvb_Subscriptions.Remove(this);
					}
					this._bvb_BillingAccount.Entity = value;
					if ((value != null))
					{
						value.bvb_Subscriptions.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("bvb_BillingAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bvb_BillingAccounts")]
	public partial class bvb_BillingAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Email;
		
		private string _CreditCard;
		
		private string _BillingZipCode;
		
		private EntitySet<bvb_Subscription> _bvb_Subscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreditCardChanging(string value);
    partial void OnCreditCardChanged();
    partial void OnBillingZipCodeChanging(string value);
    partial void OnBillingZipCodeChanged();
    #endregion
		
		public bvb_BillingAccount()
		{
			this._bvb_Subscriptions = new EntitySet<bvb_Subscription>(new Action<bvb_Subscription>(this.attach_bvb_Subscriptions), new Action<bvb_Subscription>(this.detach_bvb_Subscriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CreditCard
		{
			get
			{
				return this._CreditCard;
			}
			set
			{
				if ((this._CreditCard != value))
				{
					this.OnCreditCardChanging(value);
					this.SendPropertyChanging();
					this._CreditCard = value;
					this.SendPropertyChanged("CreditCard");
					this.OnCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingZipCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillingZipCode
		{
			get
			{
				return this._BillingZipCode;
			}
			set
			{
				if ((this._BillingZipCode != value))
				{
					this.OnBillingZipCodeChanging(value);
					this.SendPropertyChanging();
					this._BillingZipCode = value;
					this.SendPropertyChanged("BillingZipCode");
					this.OnBillingZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bvb_BillingAccount_bvb_Subscription", Storage="_bvb_Subscriptions", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<bvb_Subscription> bvb_Subscriptions
		{
			get
			{
				return this._bvb_Subscriptions;
			}
			set
			{
				this._bvb_Subscriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bvb_Subscriptions(bvb_Subscription entity)
		{
			this.SendPropertyChanging();
			entity.bvb_BillingAccount = this;
		}
		
		private void detach_bvb_Subscriptions(bvb_Subscription entity)
		{
			this.SendPropertyChanging();
			entity.bvb_BillingAccount = null;
		}
	}
}
#pragma warning restore 1591
